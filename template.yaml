AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: awsdingler-serverless-api
Globals:
  Function:
    Timeout: 10

Resources:
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: app.hello
      Runtime: nodejs8.10
      Layers:
        - !Ref AlgorithmsLayer
      Events:
        Hello:
          Type: Api
          Properties:
            RestApiId: !Ref ServerlessApi
            Path: /hello
            Method: get

  KubernetesDashboard:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/
      Handler: cron.k8sDashboard
      Runtime: nodejs8.10
      Events:
        Type: Schedule
        Properties:
          Schedule: rate(5 minutes)

  AlgorithmsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: AwsDinglerAlgorithms
      Description: Reusable algorithmic functions
      ContentUri: layers/nodejs/
      CompatibleRuntimes:
        - nodejs6.10
        - nodejs8.10
      LicenseInfo: 'MIT-0'

  ServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "awsdingler-api"
        host: "api.awsdingler.com"
        basePath: "/v1"
        schemes:
          - "https"
        consumes:
          - application/json
        produces:
          - application/json
        securityDefinitions:
          cognitoUserPool:
            type: apiKey
            name: "Authorization"
            in: header
            x-amazon-apigateway-authtype: cognito_user_pools
            x-amazon-apigateway-authorizer:
              type: cognito_user_pools
              providerARNs:
                - Fn::Sub: "arn:aws:cognito-idp:us-west-2:${AWS::AccountId}:userpool/us-west-2_IccpkvFLy"
        paths:
          /hello:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                uri: 
                  Fn::Sub: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/${HelloFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
          /k8s/hello:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: "GET"
                type: "http_proxy"
                uri: "http://a9a12520b4aa911e980ba02198db823a-ebc7c7512f5f4297.elb.us-west-2.amazonaws.com/"
                passthroughBehavior: "when_no_match"
                responses:
                  default:
                    statusCode: "200"
